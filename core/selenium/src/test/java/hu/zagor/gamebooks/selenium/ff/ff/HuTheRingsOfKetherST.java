package hu.zagor.gamebooks.selenium.ff.ff;

import hu.zagor.gamebooks.selenium.ff.BasicFfSeleniumTest;

import java.util.Arrays;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

/**
 * Selenium test for book FH3.
 * @author Tamas_Szekeres
 */
@Test
public class HuTheRingsOfKetherST extends BasicFfSeleniumTest {

    @BeforeClass
    public void setUpClass() {
        startBook("990133003", "fh3");
    }

    public void testHappyPathWithBoom() {
        setUpRandomRolls(Arrays.asList(5, 5, 3, 5, 5, 5, 5, 1, 3, 2, 6, 4, 1, 5, 3, 3, 2, 4, 6, 1, 4, 6, 3, 6, 4, 4, 6, 1, 2, 4, 5, 4, 7, 4, 5, 7, 6, 1, 3, 5, 5, 2, 5,
            4, 1, 1, 1, 4, 6, 7, 1, 7, 2, 4, 2, 6, 3, 1, 4, 2, 4, 5, 4, 2, 4, 2, 2, 6, 3, 3, 1, 3, 4, 2, 1, 5, 5, 3, 6, 5, 3, 6, 1, 3, 6, 6, 2, 6, 1, 4, 1, 5, 4, 2, 2,
            4, 3, 6, 4, 3, 6, 3, 6, 1, 4, 6, 6, 3, 4, 5, 3, 4, 1, 5, 2, 5, 2, 5, 6, 1, 3, 4, 1, 4, 5, 5, 6, 5, 1, 4, 5, 2, 4, 7, 1));
        goToPosition("0", "background");
        verifyPosition(0, 1);
        goToPosition(0, 1);
        verifyPosition(0, 333);
        verifyPosition(1, 328);
        verifyPosition(2, 372);
        goToPosition(0, 333);
        verifyPosition(0, 394);
        verifyPosition(1, 255);
        verifyPosition(2, 299);
        goToPosition(2, 299);
        verifyPosition(0, 30);
        verifyPosition(1, 362);
        goToPosition(0, 30);
        verifyPosition(0, 323);
        verifyPosition(1, 362);
        goToPosition(0, 323);
        verifyPosition(0, 314);
        verifyPosition(1, 343);
        goToPosition(1, 343);
        verifyPosition(0, 304);
        verifyPosition(1, 265);
        goToPosition(0, 304);
        sleep(200);
        verifyPosition(0, 80);
        goToPosition(0, 80);
        verifyPosition(0, 41);
        verifyPosition(1, 12);
        goToPosition(0, 41);
        verifyPosition(0, 256);
        verifyPosition(1, 246);
        goToPosition(0, 256);
        verifyPosition(0, 217);
        goToPosition(0, 217);
        verifyPosition(0, 178);
        verifyPosition(1, 188);
        goToPosition(1, 188);
        verifyPosition(0, 149);
        verifyPosition(1, 3);
        goToPosition(1, 3);
        verifyPosition(0, 315);
        verifyPosition(1, 354);
        goToPosition(0, 315);
        verifyPosition(0, 81);
        verifyPosition(1, 276);
        goToPosition(1, 276);
        verifyPosition(0, 237);
        verifyPosition(1, 198);
        goToPosition(1, 198);
        verifyPosition(0, 120);
        verifyPosition(1, 159);
        goToPosition(0, 120);
        verifyPosition(0, 44);
        verifyPosition(1, 142);
        goToPosition(0, 44);
        verifyPosition(0, 15);
        verifyPosition(1, 376);
        goToPosition(1, 376);
        doRandomRoll();
        verifyPosition(0, 191);
        verifyPosition(1, 210);
        goToPosition(0, 191);
        verifyPosition(0, 152);
        verifyPosition(1, 113);
        goToPosition(1, 113);
        verifyPosition(1, 202);
        goToPosition(1, 202);
        verifyPosition(0, 309);
        verifyPosition(1, 163);
        goToPosition(1, 163);
        verifyPosition(0, 115);
        verifyPosition(1, 124);
        goToPosition(0, 115);
        verifyPosition(0, 222);
        verifyPosition(1, 76);
        goToPosition(1, 76);
        verifyPosition(0, 310);
        verifyPosition(1, 27);
        goToPosition(0, 310);
        verifyPosition(0, 291);
        verifyPosition(1, 252);
        goToPosition(0, 291);
        verifyPosition(0, 37);
        goToPosition(0, 37);
        verifyPosition(0, 135);
        verifyPosition(1, 396);
        goToPosition(0, 135);
        verifyPosition(0, 359);
        goToPosition(0, 359);
        verifyPosition(0, 330);
        goToPosition(0, 330);
        verifyPosition(0, 311);
        verifyPosition(1, 301);
        verifyPosition(2, 67);
        verifyPosition(3, 281);
        goToPosition(0, 311);
        verifyPosition(0, 155);
        verifyPosition(1, 194);
        verifyPosition(2, 272);
        verifyPosition(3, 233);
        goToPosition(2, 272);
        verifyPosition(0, 77);
        goToPosition(0, 77);
        verifyPosition(0, 340);
        verifyPosition(1, 379);
        goToPosition(1, 379);
        verifyPosition(0, 340);
        takeItem("3002");
        goToPosition(0, 340);
        verifyPosition(0, 67);
        verifyPosition(1, 253);
        goToPosition(1, 253);
        giveResponse("antares", 133984);
        goToPosition(0, 214);
        verifyPosition(0, 58);
        goToPosition(0, 58);
        verifyPosition(0, 360);
        verifyPosition(1, 9);
        goToPosition(0, 360);
        verifyPosition(0, 321);
        verifyPosition(1, 282);
        goToPosition(1, 282);
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        prepareLuckSettings(false, false, false);
        attackEnemy("23");
        verifyPosition(0, 243);
        goToPosition(0, 243);
        verifyPosition(0, 126);
        goToPosition(0, 126);
        verifyPosition(2, 87);
        goToPosition(2, 87);
        verifyPosition(0, 48);
        verifyPosition(1, 19);
        goToPosition(0, 48);
        verifyPosition(0, 312);
        goToPosition(0, 312);
        prepareLuckSettings(false, false, false);
        attackEnemyWithMissile("25");
        prepareLuckSettings(false, false, false);
        attackEnemyWithMissile("25");
        verifyPosition(0, 117);
        verifyPosition(1, 273);
        goToPosition(1, 273);
        verifyPosition(0, 195);
        verifyPosition(1, 234);
        goToPosition(0, 195);
        verifyPosition(0, 78);
        verifyPosition(1, 39);
        verifyPosition(2, 380);
        goToPosition(0, 78);
        prepareLuckSettings(false, false, false);
        attackEnemy("27");
        prepareLuckSettings(false, false, false);
        attackEnemy("27");
        prepareLuckSettings(false, false, false);
        attackEnemy("27");
        verifyPosition(0, 263);
        goToPosition(0, 263);
        verifyPosition(0, 185);
        goToPosition(0, 185);
        verifyPosition(0, 293);
        verifyPosition(1, 332);
        verifyPosition(2, 146);
        goToPosition(0, 293);
        verifyPosition(0, 137);
        verifyPosition(1, 254);
        goToPosition(0, 137);
        doAttributeCheck();
        verifyPosition(0, 59);
        goToPosition(0, 59);
        doAttributeCheck();
        verifyPosition(0, 361);
        goToPosition(0, 361);
        doAttributeCheck();
        verifyPosition(1, 322);
        goToPosition(1, 322);
        verifyPosition(0, 244);
        consumeItem("2000");
        goToPosition(0, 244);
        verifyPosition(0, 283);
        goToPosition(0, 283);
        verifyPosition(0, 166);
        verifyPosition(1, 205);
        goToPosition(1, 205);
        verifyPosition(0, 166);
        takeItem("3003");
        goToPosition(0, 166);
        verifyPosition(0, 127);
        goToPosition(0, 127);
        verifyPosition(0, 49);
        goToPosition(0, 49);
        verifyPosition(0, 352);
        verifyPosition(1, 20);
        goToPosition(1, 20);
        verifyPosition(0, 391);
        goToPosition(0, 391);
    }

    public void testDeathByPatrolsAroundRispin() {
        setUpRandomRolls(Arrays.asList(7, 6, 2, 4, 3, 5, 1, 7, 4, 2, 1, 7, 5, 4, 5, 2, 3, 7, 6, 4, 3, 7, 5, 3, 6, 3, 5, 1, 1, 1, 3, 7, 5, 6, 2, 1, 3, 5, 1, 1, 6, 4, 3,
            5, 2, 7, 3, 5, 1, 2, 5, 5, 1, 2, 2, 4, 1, 3, 5, 5));
        goToPosition("0", "background");
        verifyPosition(0, 1);
        goToPosition(0, 1);
        verifyPosition(0, 333);
        verifyPosition(1, 328);
        verifyPosition(2, 372);
        goToPosition(1, 328);
        verifyPosition(0, 289);
        verifyPosition(1, 250);
        goToPosition(0, 289);
        verifyPosition(0, 250);
        verifyPosition(1, 333);
        goToPosition(1, 333);
        verifyPosition(0, 394);
        verifyPosition(1, 255);
        verifyPosition(2, 299);
        goToPosition(0, 394);
        verifyPosition(0, 255);
        verifyPosition(1, 299);
        goToPosition(0, 255);
        doRandomRoll();
        verifyPosition(5, 96);
        goToPosition(5, 96);
        verifyPosition(0, 398);
        verifyPosition(1, 299);
        goToPosition(1, 299);
        verifyPosition(0, 30);
        verifyPosition(1, 362);
        goToPosition(1, 362);
        doRandomRoll();
        verifyPosition(2, 382);
        goToPosition(2, 382);
        verifyPosition(0, 245);
        goToPosition(0, 245);
        verifyPosition(0, 398);
        verifyPosition(1, 343);
        goToPosition(0, 398);
        verifyPosition(0, 275);
        verifyPosition(1, 50);
        goToPosition(1, 50);
        prepareLuckSettings(false, false, false);
        attackEnemy("5");
        prepareLuckSettings(false, false, false);
        attackEnemy("5");
        prepareLuckSettings(false, false, false);
        attackEnemy("5");
        prepareLuckSettings(false, false, false);
        attackEnemy("5");
        prepareLuckSettings(false, false, false);
        attackEnemy("5");
        doRandomRoll();
    }

    public void testHappyPathByTakingIntoCustody() {
        setUpRandomRolls(Arrays.asList(4, 4, 5, 2, 6, 3, 4, 5, 5, 6, 6, 4, 5, 5, 5, 2, 4, 4, 1, 1, 6, 3, 3, 5, 6, 2, 5, 3, 6, 5, 3, 5, 6, 2, 3, 6, 4, 1, 3, 4, 6, 5, 5,
            2, 3, 6, 6, 4, 2, 3, 5, 3, 6, 3, 1, 5, 3, 2, 6, 2, 4, 7, 1, 3, 4, 4, 1, 3, 7, 2, 1, 2, 2, 1, 2, 1, 7, 1, 6, 4, 4, 7, 7, 6, 4, 2, 4, 4, 6, 3, 3, 2, 5, 2, 7,
            2, 4, 7, 2, 3, 1, 2, 7, 1, 4, 6, 2, 4, 4, 7, 2, 2, 6, 5, 7, 5, 3, 5, 2, 7, 2, 1, 3, 4, 1, 4, 4, 1, 5, 4, 3, 1, 1, 2, 5, 4, 4, 1, 5, 3, 4, 2, 5, 6, 4, 4, 2,
            6, 5, 2, 1, 1, 2, 5, 1, 3, 2, 3, 4, 7, 5, 1, 6, 6, 5, 2, 5, 6, 3, 4, 6, 1, 7, 5, 6, 3, 2, 4, 4, 1, 6, 5, 1, 6, 6, 2, 1, 2, 6, 4, 1, 6, 5, 2, 6, 1, 3, 4, 3,
            3, 1, 3, 6, 6, 6, 5, 2, 1, 2, 2, 5, 2, 1, 5, 2, 6, 5, 6, 2, 5, 6, 5, 2, 5, 4, 6, 6, 6, 6, 3, 5, 5, 5, 5, 6, 2, 4, 4, 2, 6, 7, 4, 5, 1, 2, 5, 5, 3, 4, 1, 5,
            3, 4, 3, 3, 7, 6, 1, 2, 5, 7, 5, 1, 3, 2, 4, 7, 2, 2, 2, 1, 4, 3, 4, 6, 1, 5, 1, 6, 6, 2, 6, 3, 4, 2, 4, 3, 6, 5, 1, 1, 3, 1, 3, 3, 5, 4, 3, 1, 4, 2, 5, 3,
            7, 1, 6, 1, 3, 5, 1, 5, 1, 5, 6, 3, 2, 4, 4, 4, 4, 3, 5, 2, 3, 2, 3, 5, 4, 5, 5, 5, 2, 4, 5, 7, /***/
            5, 5, 3, 6, 6, 4, 2, 1, 3, 3, 6, 4, 1, 5, 4, 6, 2, 2, 6, 1, 3, 5, 4, 5, 5, 3, 6, 4, 2, 4, 6, 2, 2, 1, 4, 4, 2, 5, 1, 1, 6, 4, 6, 4, 6, 6, 5, 1, 2, 1, 1, 1,
            6, 2, 4, 6, 3, 1, 3, 6, 1, 1, 1, 1, 1, 6, 5, 4, 2, 1, 6, 4, 3, 6, 4, 2, 5, 5, 4, 1, 3, 3, 5, 3, 2, 5, 2, 1, 5, 3, 2, 2, 2, 2, 5, 6, 2, 1, 4, 4));
        goToPosition("0", "background");
        verifyPosition(0, 1);
        goToPosition(0, 1);
        verifyPosition(0, 333);
        verifyPosition(1, 328);
        verifyPosition(2, 372);
        goToPosition(2, 372);
        prepareLuckSettings(false, false, false);
        attackEnemy("1");
        prepareLuckSettings(false, false, false);
        attackEnemy("1");
        prepareLuckSettings(false, false, false);
        attackEnemy("1");
        prepareLuckSettings(false, false, false);
        attackEnemy("1");
        prepareLuckSettings(false, false, false);
        attackEnemy("1");
        prepareLuckSettings(false, false, false);
        attackEnemy("2");
        prepareLuckSettings(false, false, false);
        attackEnemy("2");
        verifyPosition(0, 367);
        verifyPosition(1, 333);
        goToPosition(0, 367);
        verifyPosition(0, 333);
        goToPosition(0, 333);
        verifyPosition(0, 394);
        verifyPosition(1, 255);
        verifyPosition(2, 299);
        goToPosition(1, 255);
        doRandomRoll();
        verifyPosition(3, 96);
        goToPosition(3, 96);
        verifyPosition(0, 398);
        verifyPosition(1, 299);
        goToPosition(0, 398);
        verifyPosition(0, 275);
        verifyPosition(1, 50);
        verifyAttributes("gold", "5 000");
        goToPosition(0, 275);
        sleep(500);
        verifyAttributes("gold", "4 500");
        verifyPosition(0, 216);
        verifyPosition(1, 138);
        goToPosition(1, 138);
        verifyPosition(0, 99);
        verifyPosition(1, 80);
        goToPosition(0, 99);
        verifyPosition(0, 60);
        verifyPosition(1, 21);
        goToPosition(0, 60);
        verifyPosition(0, 206);
        verifyPosition(1, 80);
        goToPosition(0, 206);
        verifyPosition(0, 128);
        verifyPosition(1, 167);
        goToPosition(0, 128);
        verifyPosition(1, 80);
        verifyPosition(2, 246);
        verifyPosition(3, 167);
        verifyPosition(4, 89);
        goToPosition(3, 167);
        verifyPosition(1, 80);
        verifyPosition(2, 246);
        goToPosition(1, 80);
        verifyPosition(0, 41);
        verifyPosition(1, 12);
        goToPosition(1, 12);
        verifyPosition(0, 363);
        verifyPosition(1, 324);
        verifyPosition(2, 285);
        goToPosition(1, 324);
        verifyPosition(1, 363);
        verifyPosition(2, 285);
        verifyPosition(3, 41);
        goToPosition(1, 363);
        verifyPosition(2, 285);
        verifyPosition(3, 41);
        goToPosition(2, 285);
        verifyPosition(0, 246);
        goToPosition(0, 246);
        verifyPosition(0, 207);
        verifyPosition(1, 90);
        goToPosition(1, 90);
        doAttributeCheck();
        verifyPosition(0, 119);
        goToPosition(0, 119);
        verifyPosition(0, 393);
        goToPosition(0, 393);
        verifyPosition(0, 334);
        verifyPosition(1, 89);
        goToPosition(0, 334);
        verifyPosition(0, 89);
        verifyPosition(1, 384);
        goToPosition(0, 89);
        verifyPosition(0, 247);
        verifyPosition(1, 257);
        goToPosition(1, 257);
        doRandomRoll();
        verifyPosition(0, 23);
        goToPosition(0, 23);
        verifyPosition(0, 208);
        verifyPosition(1, 296);
        goToPosition(0, 208);
        doAttributeCheck();
        verifyPosition(0, 169);
        goToPosition(0, 169);
        verifyPosition(0, 130);
        verifyPosition(1, 72);
        goToPosition(0, 130);
        verifyPosition(0, 111);
        goToPosition(0, 111);
        verifyPosition(0, 337);
        verifyPosition(1, 384);
        goToPosition(1, 384);
        verifyPosition(0, 345);
        verifyPosition(1, 131);
        goToPosition(1, 131);
        doAttributeCheck();
        verifyPosition(0, 4);
        goToPosition(0, 4);
        verifyPosition(0, 355);
        verifyPosition(1, 345);
        goToPosition(0, 355);
        verifyPosition(1, 73);
        verifyPosition(2, 53);
        goToPosition(2, 53);
        verifyPosition(0, 316);
        goToPosition(0, 316);
        verifyPosition(0, 277);
        verifyPosition(1, 170);
        goToPosition(0, 277);
        doAttributeCheck();
        verifyPosition(0, 238);
        goToPosition(0, 238);
        verifyPosition(0, 231);
        verifyPosition(1, 199);
        goToPosition(1, 199);
        verifyPosition(0, 43);
        verifyPosition(1, 160);
        goToPosition(0, 43);
        doAttributeCheck();
        verifyPosition(0, 14);
        goToPosition(0, 14);
        verifyPosition(0, 365);
        goToPosition(0, 365);
        verifyPosition(0, 326);
        verifyPosition(1, 287);
        goToPosition(1, 287);
        verifyPosition(0, 248);
        verifyPosition(1, 231);
        goToPosition(0, 248);
        verifyPosition(0, 151);
        goToPosition(0, 151);
        verifyPosition(0, 35);
        verifyPosition(1, 112);
        goToPosition(0, 35);
        verifyPosition(0, 376);
        goToPosition(0, 376);
        doRandomRoll();
        verifyPosition(0, 191);
        verifyPosition(1, 210);
        goToPosition(1, 210);
        verifyPosition(0, 231);
        goToPosition(0, 231);
        verifyPosition(1, 75);
        verifyPosition(2, 192);
        verifyPosition(3, 73);
        goToPosition(3, 73);
        verifyPosition(0, 34);
        verifyPosition(1, 229);
        goToPosition(0, 34);
        verifyPosition(0, 336);
        verifyPosition(1, 375);
        goToPosition(1, 375);
        verifyPosition(0, 336);
        goToPosition(0, 336);
        verifyPosition(0, 397);
        verifyPosition(1, 385);
        goToPosition(0, 397);
        verifyPosition(0, 258);
        verifyPosition(1, 63);
        verifyPosition(2, 385);
        goToPosition(2, 385);
        verifyPosition(0, 83);
        verifyPosition(1, 346);
        goToPosition(0, 83);
        verifyPosition(0, 122);
        goToPosition(0, 122);
        verifyPosition(0, 161);
        goToPosition(0, 161);
        verifyPosition(0, 346);
        verifyPosition(1, 337);
        verifyPosition(2, 231);
        goToPosition(0, 346);
        verifyPosition(0, 268);
        verifyPosition(1, 307);
        goToPosition(1, 307);
        verifyPosition(0, 268);
        goToPosition(0, 268);
        verifyPosition(0, 337);
        verifyPosition(1, 231);
        goToPosition(0, 337);
        verifyPosition(1, 142);
        verifyPosition(2, 298);
        verifyPosition(3, 308);
        goToPosition(3, 308);
        verifyPosition(0, 269);
        verifyPosition(1, 211);
        goToPosition(1, 211);
        verifyPosition(0, 172);
        verifyPosition(1, 84);
        goToPosition(0, 172);
        doAttributeCheck();
        verifyPosition(0, 123);
        goToPosition(0, 123);
        verifyPosition(0, 357);
        goToPosition(0, 357);
        verifyPosition(0, 45);
        goToPosition(0, 45);
        verifyPosition(1, 320);
        verifyPosition(2, 36);
        goToPosition(2, 36);
        verifyPosition(0, 377);
        goToPosition(0, 377);
        verifyPosition(0, 338);
        verifyPosition(1, 399);
        goToPosition(1, 399);
        doAttributeCheck();
        verifyPosition(0, 260);
        goToPosition(0, 260);
        doAttributeCheck();
        verifyPosition(0, 221);
        goToPosition(0, 221);
        verifyPosition(0, 320);
        goToPosition(0, 320);
        verifyPosition(0, 331);
        verifyPosition(1, 86);
        goToPosition(0, 331);
        verifyPosition(0, 242);
        verifyPosition(1, 203);
        goToPosition(0, 242);
        doAttributeCheck();
        verifyPosition(0, 125);
        goToPosition(0, 125);
        verifyPosition(0, 330);
        goToPosition(0, 330);
        verifyPosition(0, 311);
        verifyPosition(1, 301);
        verifyPosition(2, 67);
        verifyPosition(3, 281);
        goToPosition(3, 281);
        verifyPosition(0, 292);
        verifyPosition(1, 301);
        verifyPosition(2, 311);
        verifyPosition(3, 67);
        goToPosition(0, 292);
        verifyPosition(0, 28);
        goToPosition(0, 28);
        verifyPosition(0, 350);
        verifyPosition(1, 389);
        goToPosition(0, 350);
        verifyPosition(0, 389);
        takeItem("2000");
        consumeItem("2000");
        goToPosition(0, 389);
        verifyPosition(0, 253);
        goToPosition(0, 253);
        giveResponse("antares", 4072);
        goToPosition(0, 214);
        verifyPosition(0, 58);
        goToPosition(0, 58);
        verifyPosition(0, 360);
        verifyPosition(1, 9);
        goToPosition(1, 9);
        verifyPosition(0, 360);
        goToPosition(0, 360);
        verifyPosition(0, 321);
        verifyPosition(1, 282);
        goToPosition(0, 321);
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        prepareLuckSettings(false, false, false);
        attackEnemy("24");
        verifyPosition(0, 165);
        consumeItem("2000");
        consumeItem("2000");
        consumeItem("2000");
        goToPosition(0, 165);
        verifyPosition(0, 126);
        goToPosition(0, 126);
        verifyPosition(2, 87);
        goToPosition(2, 87);
        verifyPosition(0, 48);
        verifyPosition(1, 19);
        goToPosition(1, 19);
        doAttributeCheck();
        verifyPosition(0, 370);
        goToPosition(0, 370);
        verifyPosition(0, 312);
        goToPosition(0, 312);
        prepareLuckSettings(false, false, false);
        attackEnemy("25");
        prepareLuckSettings(false, false, false);
        attackEnemy("25");
        prepareLuckSettings(false, false, false);
        attackEnemy("25");
        verifyPosition(0, 117);
        verifyPosition(1, 273);
        goToPosition(0, 117);
        prepareLuckSettings(false, false, false);
        attackEnemy("26");
        prepareLuckSettings(false, false, false);
        attackEnemy("26");
        prepareLuckSettings(false, false, false);
        attackEnemy("26");
        verifyPosition(0, 156);
        goToPosition(0, 156);
        verifyPosition(0, 195);
        goToPosition(0, 195);
        verifyPosition(0, 78);
        verifyPosition(1, 39);
        verifyPosition(2, 380);
        goToPosition(1, 39);
        doAttributeCheck();
        verifyPosition(0, 341);
        goToPosition(0, 341);
        verifyPosition(0, 185);
        goToPosition(0, 185);
        verifyPosition(0, 293);
        verifyPosition(1, 332);
        verifyPosition(2, 146);
        goToPosition(1, 332);
        verifyPosition(1, 146);
        verifyPosition(2, 293);
        goToPosition(1, 146);
        verifyPosition(0, 390);
        verifyPosition(1, 107);
        goToPosition(0, 390);
        verifyPosition(0, 371);
        goToPosition(0, 371);
        verifyPosition(2, 293);
        goToPosition(2, 293);
        verifyPosition(0, 137);
        verifyPosition(1, 254);
        goToPosition(0, 137);
        doAttributeCheck();
        verifyPosition(0, 59);
        goToPosition(0, 59);
        doAttributeCheck();
        verifyPosition(0, 361);
        goToPosition(0, 361);
        doAttributeCheck();
        verifyPosition(0, 244);
        goToPosition(0, 244);
        verifyPosition(0, 283);
        goToPosition(0, 283);
        verifyPosition(0, 166);
        verifyPosition(1, 205);
        goToPosition(0, 166);
        verifyPosition(1, 88);
        goToPosition(1, 88);
        prepareLuckSettings(false, false, false);
        attackEnemy("28");
        prepareLuckSettings(false, false, false);
        attackEnemy("28");
        prepareLuckSettings(false, false, false);
        attackEnemy("28");
        prepareLuckSettings(false, false, false);
        attackEnemy("28");
        prepareLuckSettings(false, false, false);
        attackEnemy("28");
        verifyPosition(0, 49);
        consumeItem("2000");
        goToPosition(0, 49);
        verifyPosition(0, 352);
        verifyPosition(1, 20);
        goToPosition(1, 20);
        verifyPosition(1, 352);
        goToPosition(1, 352);
        verifyPosition(0, 225);
        goToPosition(0, 225);
        verifyPosition(0, 118);
        verifyPosition(1, 157);
        verifyPosition(2, 196);
        verifyPosition(3, 235);
        verifyPosition(4, 274);
        verifyPosition(5, 313);
        goToPosition(5, 313);
        verifyPosition(0, 186);
        goToPosition(0, 186);
        verifyPosition(0, 79);
        verifyPosition(1, 40);
        verifyPosition(2, 381);
        verifyPosition(3, 342);
        verifyPosition(4, 303);
        verifyPosition(5, 264);
        goToPosition(2, 381);
        verifyPosition(0, 69);
        verifyPosition(1, 108);
        verifyPosition(2, 147);
        consumeItem("2000");
        goToPosition(2, 147);
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        prepareLuckSettings(false, false, false);
        attackEnemy("29");
        verifyPosition(0, 400);
        goToPosition(0, 400);
    }

    private void attackEnemyWithMissile(final String enemyId) {
        noJumpChoicesAvailable();
        click("[data-enemy-id='" + enemyId + "'][data-enemy-name]");
        click("[data-attack='ff-m']");
    }
}
